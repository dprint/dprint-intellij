name=dprint
action.com.dprint.actions.ClearCacheAction.description=Clear the dprint plugin cache of files that can be formatted
action.com.dprint.actions.ClearCacheAction.text=Clear Dprint Plugin Cache
action.com.dprint.actions.ReformatAction.description=Reformat the currently open file with dprint
action.com.dprint.actions.ReformatAction.text=Reformat With Dprint
action.com.dprint.actions.RestartAction.description=Restart the dprint editor-service daemon
action.com.dprint.actions.RestartAction.text=Restart Dprint
config.dprint.actions.on.save.run.dprint=Run dprint
config.changed.run="Restarting due to config change."
config.dprint.config.invalid=Invalid config file
config.dprint.config.path=Config file path
config.dprint.config.path.description=The absolute path for dprint.json. If left blank, the plugin will\
   try to find dprint.json in the project root.
config.dprint.editor.info=Received editor info: {0}
config.dprint.executable.invalid=Invalid executable
config.dprint.executable.path=Executable path
config.dprint.executable.path.description=The absolute path for the dprint executable. If left blank, the plugin will \
  try to find an executable on the path or in node_modules.
config.dprint.schemaVersion.newer=Please upgrade your editor extension to be compatible with the installed version of \
  dprint
config.dprint.schemaVersion.not.found=Unable to determine a schema version
config.dprint.schemaVersion.older=Your installed version of dprint is out of date. Apologies, but please update to the \
  latest version
config.enable=Enable dprint
config.enable.description=Enables or disabled dprint for the project. Overrides enablement of other formatting settings.
config.override.intellij.formatter=Default formatter override
config.override.intellij.formatter.description=If enabled, dprint will replace the default IntelliJ formatter if the \
  file can be formatted by dprint. If the file cannot be formatted by dprint the IntelliJ formatter will run as per usual.
config.name=Dprint
config.reload=Restart
config.reload.description=Restarts the dprint daemon process. Can also be triggered via the Restart dprint action.
config.run.on.save=Run dprint on save
config.run.on.save.description=When a file is saved dprint will determine if the file can be formatted and will format \
  it if so. This is not the same as enabling the default formatter override and running the IntelliJ formatter on save.
config.verbose.logging=Verbose daemon logging
config.verbose.logging.description=Enables verbose logging for the underlying dprint daemon. Logging for this will be \
  delivered in the dprint console and in the IntelliJ logs.
editor.process.cannot.get.editor.service.process=Cannot get a running editor service
editor.service.process.is.dead=Cannot communicate with dprint daemon, please restart the dprint IJ plugin
editor.service.cancel.format=Cancelling format {0}
editor.service.clearing.message=Clearing message {0}
editor.service.created.formatting.task=Created formatting task for {0} with id {1}
editor.service.destroy=Destroying {0}
editor.service.format.check.failed=dprint failed to check of the file {0} can be formatted due to:\n{1}
editor.service.format.failed=dprint failed to format the file {0} due to:\n{1}
editor.service.format.not.needed=No need to format {0}
editor.service.format.succeeded=Successfully formatted {0}
editor.service.incorrect.message.size=Incorrect message size, expected {0} and got {1}
editor.service.initialize=Initializing {0}
editor.service.manager.creating.formatting.task=Creating formatting task for {0}
editor.service.manager.initialising.editor.service=Initialising editor service
editor.service.manager.initialising.editor.service.failed.title=Dprint failed to initialise
editor.service.manager.initialising.editor.service.failed.content=Please check the IDE errors and the dprint console \
  tool window to diagnose the issue.
editor.service.manager.not.initialised=Editor Service is not initialised. Please check your environment and restart \
  the dprint plugin.
editor.service.manager.no.cached.can.format=Did not find cached can format result for {0}
editor.service.manager.priming.can.format.cache=Priming can format cache for {0}
editor.service.manager.received.schema.version=Received schema version {0}
editor.service.read.failed=Failed to read stdout of the editor service
editor.service.received.error.response=Received failure message: {0}.
editor.service.shutting.down.timed.out=Timed out shutting down editor process
editor.service.stale.tasks=Found stale tasks which are older than 10,000ms. Attempting to restart editor service. If \
  problem persists there is likely an issue with the underlying dprint daemon.
editor.service.started.stdout.listener=Started stdout listener
editor.service.starting.working.dir=Starting editor service with executable {0}, config {1}. No working dir found.
editor.service.starting=Starting editor service with executable {0}, config {1} and working directory {2}.
editor.service.unsupported.message.type=Received unsupported message type {0}.
error.config.path=Unable to retrieve a valid dprint configuration path.
error.executable.path=Unable to retrieve a valid dprint executable path.
error.failed.to.parse.json.schema=Failed to parse JSON schema.\n\tReceived: {0}.\n\tError: {1}.
external.formatter.can.format=Dprint can format {0}, overriding default IntelliJ formatter.
external.formatter.cancelling.task=Cancelling CodeStyle formatting task {0}
external.formatter.cannot.format=Dprint cannot format {0}, IntelliJ formatter will be used.
external.formatter.creating.task=Creating IntelliJ CodeStyle Formatting Task for {0}.
external.formatter.not.configured.to.override=Dprint is not configured to override the IntelliJ formatter.
external.formatter.range.formatting=Range formatting is not currently implemented, maybe soon.
external.formatter.range.overlapping=Formatting ranges overlap and dprint cannot format these. Consider formatting the \
  whole file.
external.formatter.illegal.state=Range format attempted without content, start or end index. Start={0}, End={1}, \
  Content={2}
external.formatter.running.task=Running CodeStyle formatting task {0}
formatting.can.format={0} can be formatted
formatting.cannot.determine.file.path=Cannot determine file path to format.
formatting.cannot.format=Cannot format {0}.
formatting.checking.can.format=Checking if {0} can be formatted.
formatting.error=Formatting error
formatting.file=Formatting {0}
formatting.received.success=Received success bytes.
formatting.received.value=Received value: {0}
formatting.scratch.files=Cannot format scratch files, file: {0}
formatting.sending.success.to.editor.service=Sending success to editor service.
formatting.sending.to.editor.service=Sending to editor service: {0}.
notification.config.not.found=Could not detect a config file
notification.executable.not.found=Could not find a dprint executable
notification.group.name=dprint
notification.invalid.config.path=The configured dprint config file is invalid
notification.invalid.default.config=Found invalid config file {0}
notification.invalid.executable.path=The configured dprint executable is invalid
process.shut.down=Dprint process {0} has shut down
clear.cache.action.run=Running the clear canFormat cache action
reformat.action.run=Running reformat action on {0}.
restart.action.run=Running restart action
save.action.run=Running save action on {0}.
